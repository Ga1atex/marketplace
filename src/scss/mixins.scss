//Подключение шрифта
@mixin font($font_name, $file_name, $weight, $style: 'normal') {
  @font-face {
    font-family: $font_name;
    font-display: swap;
    src: url("../fonts/#{$file_name}.woff2") format("woff2"),
    url("../fonts/#{$file_name}.woff") format("woff");
    font-weight: #{$weight};
    font-style: #{$style};
  }
}

//Адаптивное свойство
@mixin adaptiv-value($property, $startSize, $minSize, $type: 1, $desiredMaxWidth: 768) {
  $addSize: $startSize - $minSize;

  @if $type==1 {
    //Только если меньше контейнера
    #{$property}: $startSize + px;

    @media (max-width: #{em($maxWidthContainer)}) {
      #{$property}: calc(#{$minSize + px} + #{$addSize} * ((100vw - 320px) / #{$maxWidthContainer - 320}));
    }
  }

  @else if $type==2 {
    //Только если больше контейнера
    #{$property}: $startSize + px;

    @media (min-width: #{$maxWidthContainer + px}) {
      #{$property}: calc(#{$minSize + px} + #{$addSize} * ((100vw - 320px) / #{$maxWidth - 320}));
    }
  }

  @if $type==3 {
    //Только если меньше контейнера
    #{$property}: $startSize + px;

    @media (max-width: #{em($desiredMaxWidth)}) {
      #{$property}: calc(#{$minSize + px} + #{$addSize} * ((100vw - 320px) / #{$desiredMaxWidth - 320}));
    }
  }

  @else {
    //Всегда
    #{$property}: calc(#{$minSize + px} + #{$addSize} * ((100vw - 320px) / #{$maxWidth - 320}));
  }
}

//Адаптивное свойство до
@mixin adaptiv-value-to($property, $startSize, $minSize, $minWidth) {
  $addSize: $startSize - $minSize;

  //#{$property}: $minSize + px;
  @media (min-width: #{em($minWidth)}) {
    #{$property}: calc(#{$minSize + px} + #{$addSize} * (((100vw - #{$minWidth + px})) / ((#{$maxWidth - $minWidth}))));
  }
}

@function rem($px) {
  @return math.div($px, 16)+rem;
}

@function em($px, $parentFontSize: 16) {
  @return math.div($px, $parentFontSize)+em;
}

@function prc($child, $parent) {
  @return math.div($child, $parent) * 100%;
}

@function resp-value($start, $end) {
  @return min(calc(#{$end + px} + #{$start - $end} * (100vw - 320px) / #{$maxWidthContainer - $minWidth}), #{$start + px});
}